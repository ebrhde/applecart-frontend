import React, { useState } from 'react';
import axios from "axios";
import {NextPage} from "next";
import {Breadcrumb, Button, Card, Col, Row, Table, Alert} from "react-bootstrap";
import Link from "next/link";
import styles from "../styles/Checkout.module.scss";
import {useAppDispatch, useAppSelector} from "../redux/hooks";
import integerDivide from "../utils/integerDivide";
import {UISlice} from "../redux/ui/uiSlice";
import Order from "../components/order/Order";
import CatalogGallery from "../components/catalog-gallery/CatalogGallery";
import Head from "next/head";

interface Props {
    categories: {id: number, alias: string, title: string, description: string, image: string}[],
}

const Checkout: NextPage<Props> = ({categories}) => {
    const data = useAppSelector((state) => {
        return {
            username: state.user.username,
            items: state.cart.items,
            totalCount: state.cart.totalCount,
            totalPrice: state.cart.totalPrice,
        }
    });

    const [alertShow, setAlertShow] = useState(true);

    const dispatch = useAppDispatch();

    const orderResponse = useAppSelector((state) => state.order.orderResponse);

    const handleSigninToggle: () => void = () => dispatch(UISlice.actions.toggleSigninShown());
    const handleSignupToggle: () => void = () => dispatch(UISlice.actions.toggleSignupShown());

    return <>
        <Head>
            <title>Applecart eshop | Checkout</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
            <link href="https://fonts.googleapis.com/css2?family=Righteous&display=swap" rel="stylesheet"/>
        </Head>
        <section className={"section--page"}>
            <div className="page--container container">
                <Breadcrumb className={"custom-breadcrumb"}>
                    <Breadcrumb.Item><Link href={`/`}>Home</Link></Breadcrumb.Item>
                    <Breadcrumb.Item active>Checkout</Breadcrumb.Item>
                </Breadcrumb>
                {data.totalCount ? <div className={styles.checkout}>
                        <h2 className={styles.page_title + " mb-5"}>Checkout</h2>
                        <h5 className="mb-4">Your cart have: {data.totalCount} product(s)</h5>
                        <div className={styles.checkout__table}>
                            <Table className="table-bordered text-center">
                                <thead className={styles.thead__dark}>
                                <tr>
                                    <th scope="col">№</th>
                                    <th scope="col">Product</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Title</th>
                                    <th scope="col">Cost</th>
                                    <th scope="col">Remove</th>
                                </tr>
                                </thead>
                                <tbody>
                                {data.items.map((el, index) => (
                                    <tr>
                                        <th scope="row" className={styles.checkout__tableCell}>{index + 1}</th>
                                        <td className={styles.checkout__tableCell}>
                                            <a href="#">
                                                <img src={el.productMedia[0]} alt={el.title} className={styles.checkout__img} />
                                            </a>
                                        </td>
                                        <td className={styles.checkout__tableCell}>
                                            <button className="btn btn-light qty_change" data-qty="-1">-</button>
                                            {el.quantity}
                                            <button className="btn btn-light qty_change" data-qty="1">+</button>
                                        </td>
                                        <td className={styles.checkout__tableCell}>
                                            <p>{el.title}</p>
                                        </td>
                                        <td className={styles.checkout__tableCell}>{integerDivide(el.price)}$</td>
                                        <td className={styles.checkout__tableCell}><a
                                            href="#"><i className="fa fa-trash" aria-hidden="true"></i></a></td>
                                    </tr>
                                ))}
                                </tbody>
                            </Table>
                        </div>
                        <div className={styles.order_mobile}>
                            {data.items.map((el, index) => (
                                <div key={index} className={styles.order_mobile_item}>
                                    <h5>{el.title}</h5>
                                    <div className={styles.order_mobile_item_details + ' row'}>
                                        <Col xs={6}>
                                            <Link href={`/catalog/${el.categoryAlias}/${el.alias}`}>
                                                <img src={el.productMedia[0]} className={styles.order_img} />
                                            </Link>
                                        </Col>
                                        <Col xs={6}>
                                            <button className="btn btn-light qty_change" data-qty="-1" data-id="<?=$id?>">-</button>
                                            {el.quantity}
                                            <button className="btn btn-light qty_change" data-qty="1" data-id="<?=$id?>">+</button>
                                            <h5>{integerDivide(el.price)}$</h5>
                                        </Col>
                                    </div>
                                </div>
                            ))}
                        </div>
                        <Row>
                            <Col md={4} className={styles.checkout__prices}>
                                {data.items.map(el => (
                                    <div className={styles.checkout__price}>
                                        <p>{el.title}</p>
                                        <p>{integerDivide(el.price)}$</p>
                                    </div>
                                ))}
                                <hr />
                                <div className={styles.checkout__price}>
                                    <p>Итого:</p>
                                    <p>{integerDivide(data.totalPrice)}$</p>
                                </div>
                            </Col>
                            <Col md={8}>
                                {data.username &&
                                    <>
                                        <h5>Order details</h5>
                                        <Order />
                                    </>
                                }
                                {!data.username &&
                                    <div className={styles.checkout__no_customer  + " my-4"}>
                                        <span>To checkout, please</span>
                                        <br />
                                        <Button className={"signinButton mx-3"} onClick={handleSigninToggle} variant="success">
                                            Log in
                                        </Button>
                                        <span>or</span>
                                        <Button className={"signinButton mx-3"} onClick={handleSignupToggle} variant="success">
                                            Sign up
                                        </Button>
                                    </div>
                                }
                            </Col>
                        </Row>
                    </div>
                    : <div className={styles.checkout}>
                        <h2 className={styles.page_title + " mb-5"}>Checkout</h2>
                        {orderResponse && <Alert variant="success" onClose={() => setAlertShow(false)} dismissible>
                            <p>
                                {orderResponse}
                            </p>
                        </Alert>}
                        <h4 className={styles.no_products + " mb-4"}>Your cart have no products for checkout</h4>
                        <CatalogGallery categories={categories} />
                    </div>
                }
            </div>
        </section>
    </>
}

export async function getServerSideProps() {
    const response = await axios.get(process.env.NEXT_PUBLIC_API_ROOT + "/site/index");
    const categories = response.data.data.categories;

    // By returning { props: { posts } }, the Blog component
    // will receive `posts` as a prop at build time
    return {
        props: {
            categories,
        },
    }
}

export default Checkout;